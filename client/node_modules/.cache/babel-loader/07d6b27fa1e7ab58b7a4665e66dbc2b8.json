{"ast":null,"code":"var _jsxFileName = \"/Users/mabed/Dev/projects/comment-toxicity-classification/app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Box, Button, Typography } from '@mui/material';\nimport { TextField, Grid, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/material/styles'; // MUI Custom Text Field\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white'\n  },\n  'input': {},\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#9c27b0'\n  },\n  \"& .MuiFormLabel-root\": {\n    color: 'white'\n  },\n  \"& .MuiFormLabel-root.Mui-focused\": {\n    color: 'white'\n  },\n  '& .MuiInputBase-root': {\n    color: 'white'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#9c27b0'\n    },\n    '&:hover fieldset': {\n      borderColor: '#9c27b0'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#9c27b0'\n    }\n  }\n});\n_c = CssTextField;\n\nfunction App() {\n  _s();\n\n  // Initial States\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [text, setText] = useState('');\n  const [prediction, setPrediction] = useState(''); // Call backend for prediction\n\n  const submitHandler = async text => {\n    try {\n      setLoading(true); // Send request\n\n      const {\n        data\n      } = await axios.get(`http://127.0.0.1:8000/predict/${text}`); // Modify state\n\n      setLoading(false);\n      setPrediction(data);\n      console.log(data);\n      setText('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          mt: 4,\n          color: \"white\",\n          children: \"Comment Toxicity Classification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          style: {\n            width: '500px'\n          },\n          label: \"Enter Text\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          multiline: true,\n          rows: 4,\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          mt: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: submitHandler,\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), prediction && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"white\",\n        children: \"Your Comment is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }, this), prediction ? Object.keys(prediction).map((key, index) => /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: prediction[key] === 'true' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 43\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"GUdmmlCz+YUnhSTkRW+om3TlFsY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CssTextField\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","axios","Box","Button","Typography","TextField","Grid","CircularProgress","styled","CssTextField","color","borderBottomColor","borderColor","App","loading","setLoading","error","setError","text","setText","prediction","setPrediction","submitHandler","data","get","console","log","message","width","e","target","value","Object","keys","map","key","index"],"sources":["/Users/mabed/Dev/projects/comment-toxicity-classification/app/client/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nimport { Box, Button, Typography } from '@mui/material'\nimport { TextField, Grid, CircularProgress } from '@mui/material'\nimport { styled } from '@mui/material/styles'\n\n// MUI Custom Text Field\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  'input': {\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#9c27b0',\n  },\n  \"& .MuiFormLabel-root\": {\n    color: 'white'\n  },\n  \"& .MuiFormLabel-root.Mui-focused\": {\n    color: 'white'\n  },\n  '& .MuiInputBase-root': {\n    color: 'white'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#9c27b0',\n    },\n    '&:hover fieldset': {\n      borderColor: '#9c27b0',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#9c27b0',\n    },\n  },\n\n});\n\nfunction App() {\n\n  // Initial States\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [text, setText] = useState('')\n  const [prediction, setPrediction] = useState('')\n\n  // Call backend for prediction\n  const submitHandler = async (text) => {\n    try {\n      setLoading(true)\n\n      // Send request\n      const { data } = await axios.get(`http://127.0.0.1:8000/predict/${text}`)\n\n      // Modify state\n      setLoading(false)\n      setPrediction(data)\n      console.log(data)\n      setText('')\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Grid item xs={12}>\n          <Typography variant='h3' mt={4} color='white'>Comment Toxicity Classification</Typography>\n        </Grid>\n        <Grid item xs={8} mt={6}>\n          <CssTextField\n            style={{ width: '500px' }}\n            label=\"Enter Text\"\n            variant=\"outlined\"\n            color='secondary'\n            multiline\n            rows={4}\n            value={text}\n            onChange={(e) => { setText(e.target.value) }}\n          />\n        </Grid>\n        <Box mt={4}>\n          {\n            loading ? <CircularProgress mt={2} />\n              :\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={submitHandler}\n              >\n                Predict\n              </Button>\n          }\n        </Box>\n        {prediction && <Typography variant='h4' color='white'>Your Comment is:</Typography>}\n        {prediction ? Object.keys(prediction).map((key, index) => (\n          <Box mt={4}>\n            {prediction[key] === 'true' ? <p key={index}>{key}</p> : null}\n            {/* {prediction.item === 'true' && <p>prediction.item</p>} */}\n            {/* <p key={index}> this is my key {key} and this is my value {prediction[key]}</p> */}\n          </Box>\n        )) : null}\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}