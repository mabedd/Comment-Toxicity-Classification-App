{"ast":null,"code":"var _jsxFileName = \"/Users/mabed/Dev/projects/comment-toxicity-classification/app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Button, Typography } from '@mui/material';\nimport { TextField, Grid, CircularProgress } from '@mui/material';\nimport { createStyles, fade, Theme, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Initial States\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [text, setText] = useState('');\n  const [prediction, setPrediction] = useState(''); // Call backend for prediction\n\n  const submitHandler = async text => {\n    try {\n      setLoading(true); // Send Request\n\n      const {\n        data\n      } = await axios.get(`http://127.0.0.1:8000/predict/${text}`);\n      setLoading(false);\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          mt: 4,\n          color: \"white\",\n          children: \"Comment Toxicity Classification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            \"& .MuiOutlinedInput-root.Mui-disabled\": {\n              \"& > fieldset\": {\n                border: '1px solid green'\n              }\n            }\n          },\n          style: {\n            width: '500px',\n            borderColor: 'white'\n          },\n          label: \"Enter Text\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          multiline: true,\n          rows: 4,\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        mt: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitHandler,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"GUdmmlCz+YUnhSTkRW+om3TlFsY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","Button","Typography","TextField","Grid","CircularProgress","createStyles","fade","Theme","withStyles","makeStyles","createMuiTheme","App","loading","setLoading","error","setError","text","setText","prediction","setPrediction","submitHandler","data","get","console","log","message","border","width","borderColor","e","target","value"],"sources":["/Users/mabed/Dev/projects/comment-toxicity-classification/app/client/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nimport { Button, Typography } from '@mui/material'\nimport { TextField, Grid, CircularProgress } from '@mui/material'\nimport {\n  createStyles,\n  fade,\n  Theme,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from '@material-ui/core/styles'\n\nfunction App() {\n\n  // Initial States\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [text, setText] = useState('')\n  const [prediction, setPrediction] = useState('')\n\n  // Call backend for prediction\n  const submitHandler = async (text) => {\n    try {\n      setLoading(true)\n\n      // Send Request\n      const { data } = await axios.get(`http://127.0.0.1:8000/predict/${text}`)\n\n      setLoading(false)\n      console.log(data)\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Grid item xs={12}>\n          <Typography variant='h3' mt={4} color='white'>Comment Toxicity Classification</Typography>\n        </Grid>\n        <Grid item xs={8} mt={6}>\n          <TextField\n            sx={{ \"& .MuiOutlinedInput-root.Mui-disabled\": { \"& > fieldset\": { border: '1px solid green' } } }}\n            style={{ width: '500px', borderColor: 'white' }}\n            label=\"Enter Text\"\n            variant=\"outlined\"\n            color='secondary'\n            multiline\n            rows={4}\n            value={text}\n            onChange={(e) => { setText(e.target.value) }}\n          />\n        </Grid>\n        {\n          loading ? <CircularProgress mt={2} />\n            :\n            <Button onClick={submitHandler}>Predict</Button>\n        }\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,gBAA1B,QAAkD,eAAlD;AACA,SACEC,YADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,cANF,QAOO,0BAPP;;;;AASA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C,CANa,CAQb;;EACA,MAAMsB,aAAa,GAAG,MAAOJ,IAAP,IAAgB;IACpC,IAAI;MACFH,UAAU,CAAC,IAAD,CAAV,CADE,CAGF;;MACA,MAAM;QAAEQ;MAAF,IAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAW,iCAAgCN,IAAK,EAAhD,CAAvB;MAEAH,UAAU,CAAC,KAAD,CAAV;MACAU,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACD,CARD,CAQE,OAAOP,KAAP,EAAc;MACdS,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,OAAlB;IACD;EACF,CAZD;;EAcA,oBACE;IAAA,uBACE,QAAC,IAAD;MACE,SAAS,MADX;MAEE,OAAO,EAAE,CAFX;MAGE,SAAS,EAAC,QAHZ;MAIE,UAAU,EAAC,QAJb;MAKE,cAAc,EAAC,QALjB;MAAA,wBAOE,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,EAAf;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAyB,EAAE,EAAE,CAA7B;UAAgC,KAAK,EAAC,OAAtC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF,eAUE,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,EAAE,EAAE,CAAtB;QAAA,uBACE,QAAC,SAAD;UACE,EAAE,EAAE;YAAE,yCAAyC;cAAE,gBAAgB;gBAAEC,MAAM,EAAE;cAAV;YAAlB;UAA3C,CADN;UAEE,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAT;YAAkBC,WAAW,EAAE;UAA/B,CAFT;UAGE,KAAK,EAAC,YAHR;UAIE,OAAO,EAAC,UAJV;UAKE,KAAK,EAAC,WALR;UAME,SAAS,MANX;UAOE,IAAI,EAAE,CAPR;UAQE,KAAK,EAAEZ,IART;UASE,QAAQ,EAAGa,CAAD,IAAO;YAAEZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;UAAyB;QAT9C;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF,EAwBInB,OAAO,gBAAG,QAAC,gBAAD;QAAkB,EAAE,EAAE;MAAtB;QAAA;QAAA;QAAA;MAAA,QAAH,gBAEL,QAAC,MAAD;QAAQ,OAAO,EAAEQ,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BN;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAiCD;;GAxDQT,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}